// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using divitiae_api.SQLData;

#nullable disable

namespace divitiae_api.Migrations
{
    [DbContext(typeof(SQLDataContext))]
    [Migration("20230924202632_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserWorkspace", b =>
                {
                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkspacesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsersId", "WorkspacesId");

                    b.HasIndex("WorkspacesId");

                    b.ToTable("UserWorkspace");
                });

            modelBuilder.Entity("divitiae_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("divitiae_api.Models.UserToWorkEnvRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkEnvironmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "WorkEnvironmentId");

                    b.HasIndex("WorkEnvironmentId");

                    b.ToTable("UserToWorkEnvRoles");
                });

            modelBuilder.Entity("divitiae_api.Models.WorkEnvironment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnvironmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkEnvironments");
                });

            modelBuilder.Entity("divitiae_api.Models.Workspace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkenvironmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkspaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WorkenvironmentId");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("divitiae_api.Models.WsAppsRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("WsAppsRelations");
                });

            modelBuilder.Entity("UserWorkspace", b =>
                {
                    b.HasOne("divitiae_api.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("divitiae_api.Models.Workspace", null)
                        .WithMany()
                        .HasForeignKey("WorkspacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("divitiae_api.Models.UserToWorkEnvRole", b =>
                {
                    b.HasOne("divitiae_api.Models.User", "User")
                        .WithMany("UserToWorkEnvRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("divitiae_api.Models.WorkEnvironment", "WorkEnvironment")
                        .WithMany("UserToWorkEnvRole")
                        .HasForeignKey("WorkEnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkEnvironment");
                });

            modelBuilder.Entity("divitiae_api.Models.Workspace", b =>
                {
                    b.HasOne("divitiae_api.Models.WorkEnvironment", "Workenvironment")
                        .WithMany("Workspaces")
                        .HasForeignKey("WorkenvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workenvironment");
                });

            modelBuilder.Entity("divitiae_api.Models.WsAppsRelation", b =>
                {
                    b.HasOne("divitiae_api.Models.Workspace", "Workspace")
                        .WithMany("WsAppsRelations")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("divitiae_api.Models.User", b =>
                {
                    b.Navigation("UserToWorkEnvRole");
                });

            modelBuilder.Entity("divitiae_api.Models.WorkEnvironment", b =>
                {
                    b.Navigation("UserToWorkEnvRole");

                    b.Navigation("Workspaces");
                });

            modelBuilder.Entity("divitiae_api.Models.Workspace", b =>
                {
                    b.Navigation("WsAppsRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
